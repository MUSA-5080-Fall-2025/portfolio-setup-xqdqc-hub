{"title":"Week 3 In-Class Lab: Data Visualization and EDA","markdown":{"yaml":{"title":"Week 3 In-Class Lab: Data Visualization and EDA","author":"Elizabeth Delmelle","date":"today","format":{"html":{"code-fold":false,"toc":true,"toc-location":"left","theme":"cosmo"}},"execute":{"warning":false,"message":false},"editor":{"markdown":{"wrap":72}}},"headingText":"Setup and Data Loading","containsRefs":false,"markdown":"\n\n\n```{r}\n# Load required packages\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(scales)\nlibrary(RColorBrewer)\n# Set your Census API key if you haven't already\ncensus_api_key(\"ec702835845a134b4376c60759aa72ce62f6df59\")\n\n# We'll use Pennsylvania data for consistency with previous weeks\nstate_choice <- \"PA\"\n```\n\n------------------------------------------------------------------------\n\n## Exercise 0: Finding Census Variable Codes\n\n**The Challenge:** You know you want data on total population, median\nincome, and median age, but you don't know the specific Census variable\ncodes. How do you find them?\n\n### 0.1 Load the Variable Dictionary\n\n```{r}\n# Load all available variables for ACS 5-year 2022\nacs_vars_2022 <- load_variables(2022, \"acs5\", cache = TRUE)\n\n# Look at the structure\nglimpse(acs_vars_2022)\nhead(acs_vars_2022)\n```\n\n**What you see:**\n\n-   `name`: The variable code (e.g., \"B01003_001\")\n-   `label`: Human-readable description\n-   `concept`: The broader table this variable belongs to\n\n### 0.2 Search for Population Variables\n\n**Your Task:** Find the variable code for total population.\n\n```{r}\n# Search for population-related variables\npopulation_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"Total.*population\"))\n\n# Look at the results\nhead(population_vars, 10)\n\n# Or search in the concept field\npop_concept <- acs_vars_2022 %>%\n  filter(str_detect(concept, \"Total Population\"))\n\nhead(pop_concept)\n```\n\n**Tip:** Look for \"Total\" followed by \"population\" - usually\n`B01003_001`\n\n### 0.3 Search for Income Variables\n\n**Your Task:** Find median household income variables.\n\n```{r}\n# Search for median income\nincome_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*income\"))\n\n# Look specifically for household income\nhousehold_income <- income_vars %>%\n  filter(str_detect(label, \"household\"))\n\nprint(\"Household income variables:\")\nhead(household_income)\n\n# Alternative: search by concept\nincome_concept <- acs_vars_2022 %>%\n  filter(str_detect(concept, \"Median Household Income\"))\n\nhead(income_concept)\n```\n\n**Pattern Recognition:** Median household income is typically\n`B19013_001`\n\n### 0.4 Search for Age Variables\n\n**Your Task:** Find median age variables.\n\n\\[write the code below - first add a code chunk\\]\n\n### 0.5 Advanced Search Techniques\n\n**Your Task:** Learn more sophisticated search methods.\n\n```{r}\n# Search for multiple terms at once\nhousing_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*(rent|value)\"))\n\nprint(\"Housing cost variables:\")\nhead(housing_vars, 10)\n\n# Search excluding certain terms\nincome_not_family <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*income\") & \n         !str_detect(label, \"family\"))\n\nprint(\"Income variables (not family income):\")\nhead(income_not_family)\n\n# Case-insensitive search using regex\neducation_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, regex(\"bachelor\", ignore_case = TRUE)))\n\nprint(\"Education variables:\")\nhead(education_vars, 5)\n```\n\n### 0.6 Interactive Exploration\n\n**Your Task:** Use RStudio's viewer for easier searching.\n\n```{r}\n# Open the full variable list in RStudio viewer\n# This opens a searchable data table\nView(acs_vars_2022)\n\n# Pro tip: You can also search specific table groups\n# B01 = Age and Sex\n# B19 = Income  \n# B25 = Housing\ntable_b19 <- acs_vars_2022 %>%\n  filter(str_detect(name, \"^B19\"))  # ^ means \"starts with\"\n\nprint(\"All B19 (Income) table variables:\")\nhead(table_b19, 10)\n\n```\n\n### 0.7 Verify Your Variable Choices\n\n**Your Task:** Test your variables by getting a small sample of data.\n\n```{r}\n# Test the variables you found\ntest_vars <- c(\n  total_pop = \"B01003_001\",      # Total population\n  median_income = \"B19013_001\",  # Median household income\n  median_age = \"B01002_001\"      # Median age\n)\n\n# Get data for just one state to test\ntest_data <- get_acs(\n  geography = \"state\",\n  variables = test_vars,\n  state = \"PA\",\n  year = 2022\n)\n\n# Check that you got what you expected\ntest_data\n```\n\n### 0.8 Common Variable Patterns\n\n**Reference guide for future use:**\n\n```{r}\n# Common patterns to remember:\ncommon_variables <- tribble(\n  ~concept, ~typical_code, ~description,\n  \"Total Population\", \"B01003_001\", \"Total population\",\n  \"Median Age\", \"B01002_001\", \"Median age of population\", \n  \"Median HH Income\", \"B19013_001\", \"Median household income\",\n  \"White Population\", \"B03002_003\", \"White alone population\",\n  \"Black Population\", \"B03002_004\", \"Black/African American alone\",\n  \"Hispanic Population\", \"B03002_012\", \"Hispanic or Latino population\",\n  \"Bachelor's Degree\", \"B15003_022\", \"Bachelor's degree or higher\",\n  \"Median Rent\", \"B25058_001\", \"Median contract rent\",\n  \"Median Home Value\", \"B25077_001\", \"Median value owner-occupied\"\n)\n\nprint(\"Common Census Variables:\")\ncommon_variables\n```\n\n**Key Tips for Variable Hunting:**\n\n1.  **Start with concepts** - search for the topic you want (income,\n    age, housing)\n2.  **Look for \"Median\"** vs \"Mean\" - median is usually more\n    policy-relevant\n3.  **Check the universe** - some variables are for \"households,\" others\n    for \"population\"\n4.  **Test with small data** before running large queries\n5.  **Bookmark useful variables** for future projects (type them in your\n    weekly notes!)\n\n## Exercise 1: Single Variable EDA\n\n### 1.1 Load and Inspect Data\n\n```{r}\n# Get county-level data for your state\ncounty_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    total_pop = \"B01003_001\",       # Total population\n    median_income = \"B19013_001\",   # Median household income\n    median_age = \"B01002_001\"       # Median age\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n)\n\n# Clean county names\ncounty_data <- county_data %>%\n  mutate(county_name = str_remove(NAME, paste0(\", Pennsylvania\")))\n\n# Basic inspection\nglimpse(county_data)\n```\n```{r}\nview(county_data)\n```\n\n### 1.2 Explore Income Distribution\n\n**Your Task:** Create a histogram of median household income and\ndescribe what you see.\n\n```{r}\n# Create histogram of median income\nggplot(county_data) +\n  aes(x = median_incomeE) +\n  geom_histogram(bins = 15, fill = \"lightgreen\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Median Household Income\",\n    x = \"Median Household Income ($)\",\n    y = \"Number of Counties\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = dollar)\n```\n\n### 1.3 Box Plot for Outlier Detection\n\n**Your Task:** Create a boxplot to identify specific outlier counties.\n\n```{r}\n# Box plot to see outliers clearly\nggplot(county_data) +\n  aes(y = median_incomeE) +\n  geom_boxplot(fill = \"lightblue\", width = 0.5) +\n  labs(\n    title = \"Median Income Distribution with Outliers\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n\n# Identify the outlier counties\nincome_outliers <- county_data %>%\n  mutate(\n    Q1 = quantile(median_incomeE, 0.25, na.rm = TRUE),\n    Q3 = quantile(median_incomeE, 0.75, na.rm = TRUE),\n    IQR = Q3 - Q1,\n    outlier = median_incomeE < (Q1 - 1.5 * IQR) | median_incomeE > (Q3 + 1.5 * IQR)\n  ) %>%\n  filter(outlier) %>%\n  select(county_name, median_incomeE)\n\nprint(\"Outlier counties:\")\nincome_outliers\n```\n\n### 1.4 Challenge Exercise: Population Distribution\n\n**Your Task:** Create your own visualization of population distribution\nand identify outliers.\n\n**Requirements:**\n\n-   Create a histogram of total population (`total_popE`)\n-   Use a different color than the income example (try \"darkgreen\" or\n    \"purple\")\n-   Add appropriate labels and title\n-   Create a boxplot to identify population outliers\n-   Find and list the 3 most populous and 3 least populous counties\n```{r}\n# Box plot to see outliers clearly\nggplot(county_data) +\n  aes(y = total_popE) +\n  geom_boxplot(fill = \"lightblue\", width = 0.5) +\n  labs(\n    title = \"Total Population Distribution with Outliers\",\n    y = \"Total Population\"\n  ) +\n  theme_minimal()\n\n# Identify the outlier counties\npopulation_outliers <- county_data %>%\n  mutate(\n    Q1 = quantile(total_popE, 0.25, na.rm = TRUE),\n    Q3 = quantile(total_popE, 0.75, na.rm = TRUE),\n    IQR = Q3 - Q1,\n    outlier = total_popE < (Q1 - 1.5 * IQR) | total_popE > (Q3 + 1.5 * IQR)\n  ) %>%\n  filter(outlier) %>%\n  select(county_name, total_popE)\n\nprint(\"Outlier counties:\")\npopulation_outliers\n```\n\n------------------------------------------------------------------------\n\n## Exercise 2: Two Variable Relationships\n\n### 2.1 Population vs Income Scatter Plot\n\n**Your Task:** Explore the relationship between population size and\nmedian income.\n\n```{r}\n# Basic scatter plot\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point() +\n  labs(\n    title = \"Population vs Median Income\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n### 2.2 Add Trend Line and Labels\n\n**Your Task:** Improve the plot by adding a trend line and labeling\ninteresting points.\n\n```{r}\n# Enhanced scatter plot with trend line\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"red\") +\n  labs(\n    title = \"Population vs Median Income in Pennsylvania Counties\",\n    subtitle = \"2018-2022 ACS 5-Year Estimates\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\",\n    caption = \"Source: U.S. Census Bureau\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n\n# Calculate correlation\ncorrelation <- cor(county_data$total_popE, county_data$median_incomeE, use = \"complete.obs\")\nprint(paste(\"Correlation coefficient:\", round(correlation, 3)))\n```\n\n### 2.3 Deal with Skewed Data\n\n**Your Task:** The population data is highly skewed. Try a log\ntransformation.\n\n```{r}\n# Log-transformed scatter plot\nggplot(county_data) +\n  aes(x = log(total_popE), y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(\n    title = \"Log(Population) vs Median Income\",\n    x = \"Log(Total Population)\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n```\n\n**Question:** Does the log transformation reveal a clearer relationship?\nYes.\n\n### 2.4 Challenge Exercise: Age vs Income Relationship\n\n**Your Task:** Explore the relationship between median age and median\nincome using different visualization techniques.\n```{r}\n# Enhanced scatter plot with trend line\nggplot(county_data) +\n  aes(x = median_ageE, y = median_incomeE) +\n  geom_point(color = \"red\", alpha = 0.5) +\n  geom_smooth(method = \"loess\", se = TRUE) +\n  labs(\n    title = \"Population vs Median Income in Pennsylvania Counties\",\n    subtitle = \"2018-2022 ACS 5-Year Estimates\",\n    x = \"Median Age\",\n    y = \"Median Household Income ($)\",\n    caption = \"Source: U.S. Census Bureau\"\n  ) +\n  theme_dark() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n**Requirements:**\n\n-   Create a scatter plot with median age on x-axis and median income on\n    y-axis\n-   Use red points (`color = \"red\"`) with 50% transparency\n    (`alpha = 0.5`)\n-   Add a smooth trend line using `method = \"loess\"` instead of \"lm\"\n-   Use the \"dark\" theme (`theme_dark()`)\n-   Format the y-axis with dollar signs\n-   Add a title that mentions both variables\n\n------------------------------------------------------------------------\n\n## Exercise 3: Data Quality Visualization \n\n### 3.1 Visualize Margins of Error\n\n**Your Task:** Create a visualization showing how data reliability\nvaries across counties.\n\n```{r}\n# Calculate MOE percentages\ncounty_reliability <- county_data %>%\n  mutate(\n    income_moe_pct = (median_incomeM / median_incomeE) * 100,\n    pop_category = case_when(\n      total_popE < 50000 ~ \"Small (<50K)\",\n      total_popE < 200000 ~ \"Medium (50K-200K)\",\n      TRUE ~ \"Large (200K+)\"\n    )\n  )\n\n# MOE by population size\nggplot(county_reliability) +\n  aes(x = total_popE, y = income_moe_pct) +\n  geom_point(alpha = 0.7) +\n  geom_hline(yintercept = 10, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Data Reliability Decreases with Population Size\",\n    x = \"Total Population\",\n    y = \"Margin of Error (%)\",\n    caption = \"Red line = 10% reliability threshold\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma)\n```\n\n### 3.2 Compare Reliability by County Size\n\n**Your Task:** Use box plots to compare MOE across county size\ncategories.\n\n```{r}\n# Box plots by population category\nggplot(county_reliability) +\n  aes(x = pop_category, y = income_moe_pct, fill = pop_category) +\n  geom_boxplot() +\n  labs(\n    title = \"Data Reliability by County Size Category\",\n    x = \"Population Category\",\n    y = \"Margin of Error (%)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")  # Remove legend since x-axis is clear\n```\n\n### 3.3 Challenge Exercise: Age Data Reliability\n\n**Your Task:** Analyze the reliability of median age data across\ncounties.\n```{r}\n# Calculate MOE percentages\nage_county_reliability <- county_data %>%\n  mutate(\n    age_moe_pct = (median_ageM / median_ageE) * 100,\n    age_category = case_when(\n      median_ageE < 40 ~ \"Small (<40)\",\n      median_ageE < 50 ~ \"Medium (40-50)\",\n      TRUE ~ \"Large (50+)\"\n    )\n  )\n\nggplot(age_county_reliability) +\n  aes(x = median_ageE, y = age_moe_pct) +\n  geom_point(color = \"purple\", size = 2, alpha = 0.7) +\n  geom_hline(yintercept = 5, color = \"blue\", linetype = \"dashed\") +\n  labs(\n    title = \"Data Reliability Decreases with Median Age\",\n    x = \"Median Age\",\n    y = \"Margin of Error (%)\",\n    caption = \"Red line = 5% reliability threshold\"\n  ) +\n  theme_classic() +\n  scale_x_continuous(labels = comma)\n```\n```{r}\n# Box plots by population category\nggplot(age_county_reliability) +\n  aes(x = age_category, y = age_moe_pct, fill = age_category) +\n  geom_boxplot() +\n  labs(\n    title = \"Data Reliability by County Size Category\",\n    x = \"Age Category\",\n    y = \"Margin of Error (%)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")  # Remove legend since x-axis is clear\n```\n\n**Requirements:** \n\n- Calculate MOE percentage for median age\n(`median_ageM / median_ageE * 100`) \n- Create a scatter plot showing\npopulation vs age MOE percentage \n- Use purple points\n(`color = \"purple\"`) with size = 2 \n- Add a horizontal line at 5% MOE\nusing `geom_hline()` with a blue dashed line \n- Use `theme_classic()`instead of `theme_minimal()` \n- Create a boxplot comparing age MOE across the three population categories\n\n------------------------------------------------------------------------\n\n## Exercise 4: Multiple Variables with Color and Faceting \n\n### 4.1 Three-Variable Scatter Plot\n\n**Your Task:** Add median age as a color dimension to the\npopulation-income relationship.\n\n```{r}\n# Three-variable scatter plot\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE, color = median_ageE) +\n  geom_point(size = 2, alpha = 0.7) +\n  scale_color_viridis_c(name = \"Median\\nAge\") +\n  labs(\n    title = \"Population, Income, and Age Patterns\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n### 4.2 Create Categories for Faceting\n\n**Your Task:** Create age categories and use faceting to compare\npatterns.\n\n```{r}\n# Create age categories and faceted plot\ncounty_faceted <- county_data %>%\n  mutate(\n    age_category = case_when(\n      median_ageE < 40 ~ \"Young (< 40)\",\n      median_ageE < 45 ~ \"Middle-aged (40-45)\",\n      TRUE ~ \"Older (45+)\"\n    )\n  )\n\nggplot(county_faceted) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~age_category) +\n  labs(\n    title = \"Population-Income Relationship by Age Profile\",\n    x = \"Total Population\",\n    y = \"Median Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n**Question:** Do the relationships between population and income differ\nby age profile?\nYes.\n\n**Your Task:** Create a visualization using income categories and multiple aesthetic mappings.\n```{r}\n# Create age categories and faceted plot\nincome_county_faceted <- county_data %>%\n  mutate(\n    income_category = case_when(\n      median_incomeE < 50000 ~ \"Low (< 50k)\",\n      median_incomeE < 80000 ~ \"Middle (50-80k)\",\n      TRUE ~ \"High (80k+)\"\n    )\n  )\n\nlibrary(RColorBrewer)\nggplot(income_county_faceted) +\n  aes(\n    x = total_popE, \n    y = median_ageE,\n    color = income_category,\n    size = median_incomeM\n  ) +\n  geom_point(alpha = 0.7) +\n  scale_color_brewer(palette = \"Set2\") + \n  labs(\n    title = \"Population vs. Median Age by Income Category\",\n    x = \"Total Population\",\n    y = \"Median Age\",\n    color = \"Income Category\",\n    size = \"Income MOE\"\n  ) +\n  facet_wrap(~income_category) +\n  theme_bw() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = number) \n```\n\n**Requirements:** \n\n- Create income categories: \"Low\" (\\<\\$50k), \"Middle\"\n(\\$50k-\\$80k), \"High\" (\\>\\$80k) \n- Make a scatter plot with population (x) vs median age (y) - Color points by income category \n- Size points by the margin of error for income (`median_incomeM`) \n- Use the \"Set2\" color palette: `scale_color_brewer(palette = \"Set2\")` **note: you'll need to load the `RColorBrewer` package for this`\n- Facet by income category using `facet_wrap()` \n- Use `theme_bw()` theme\n\n------------------------------------------------------------------------\n\n## Exercise 5: Data Joins and Integration \n\n### 5.1 Get Additional Census Data\n\n**Your Task:** Load educational attainment data and join it with our\nexisting data.\n\n```{r}\n# Get educational attainment data\neducation_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    total_25plus = \"B15003_001\",    # Total population 25 years and over\n    bachelor_plus = \"B15003_022\"    # Bachelor's degree or higher\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  mutate(\n    pct_college = (bachelor_plusE / total_25plusE) * 100,\n    county_name = str_remove(NAME, paste0(\", \", state_choice))\n  ) %>%\n  select(GEOID, county_name, pct_college)\n\n# Check the data\nhead(education_data)\n```\n\n### 5.2 Join the Datasets\n\n**Your Task:** Join the education data with our main county dataset.\n\n```{r}\n# Perform the join\ncombined_data <- county_data %>%\n  left_join(education_data, by = \"GEOID\")\n\n# Check the join worked\ncat(\"Original data rows:\", nrow(county_data), \"\\n\")\ncat(\"Combined data rows:\", nrow(combined_data), \"\\n\")\ncat(\"Missing education data:\", sum(is.na(combined_data$pct_college)), \"\\n\")\n\n# View the combined data\nhead(combined_data)\n```\n\n### 5.3 Analyze the New Relationship\n\n**Your Task:** Explore the relationship between education and income.\n\n```{r}\n# Education vs Income scatter plot\nggplot(combined_data) +\n  aes(x = pct_college, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(\n    title = \"Education vs Income Across Counties\",\n    x = \"Percent with Bachelor's Degree or Higher\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n\n# Calculate correlation\nedu_income_cor <- cor(combined_data$pct_college, combined_data$median_incomeE, use = \"complete.obs\")\nprint(paste(\"Education-Income Correlation:\", round(edu_income_cor, 3)))\n```\n\n### 5.4 Get Housing Data and Triple Join\n\n**Your Task:** Add housing cost data to create a three-way analysis.\n\n```{r}\n# Get housing cost data\nhousing_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    median_rent = \"B25058_001\",     # Median contract rent\n    median_home_value = \"B25077_001\" # Median value of owner-occupied units\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  select(GEOID, median_rent = median_rentE, median_home_value = median_home_valueE)\n\n# Join all three datasets\nfull_data <- combined_data %>%\n  left_join(housing_data, by = \"GEOID\")\n\n# Create a housing affordability measure\nfull_data <- full_data %>%\n  mutate(\n    rent_to_income = (median_rent * 12) / median_incomeE * 100,\n    income_category = case_when(\n      median_incomeE < 50000 ~ \"Low Income\",\n      median_incomeE < 80000 ~ \"Middle Income\",\n      TRUE ~ \"High Income\"\n    )\n  )\n\nhead(full_data)\n```\n\n### 5.5 Advanced Multi-Variable Analysis\n\n**Your Task:** Create a comprehensive visualization showing multiple\nrelationships.\n\n```{r}\n# Complex multi-variable plot\nggplot(full_data) +\n  aes(x = pct_college, y = rent_to_income, \n      color = income_category, size = total_popE) +\n  geom_point(alpha = 0.7) +\n  labs(\n    title = \"Education, Housing Affordability, and Income Patterns\",\n    subtitle = \"Larger points = larger population\",\n    x = \"Percent with Bachelor's Degree or Higher\",\n    y = \"Annual Rent as % of Median Income\",\n    color = \"Income Category\",\n    size = \"Population\"\n  ) +\n  theme_minimal() +\n  guides(size = guide_legend(override.aes = list(alpha = 1)))\n```\n\n## Exercise 6: Publication-Ready Visualization\n\n### 6.1 Create a Policy-Focused Visualization\n\n**Your Task:** Combine multiple visualizations to tell a more complete story about county characteristics.\n\n```{r}\n# Create a multi-panel figure\nlibrary(patchwork)  # For combining plots\n\n# Plot 1: Income distribution\np1 <- ggplot(full_data) +\n  aes(x = median_incomeE) +\n  geom_histogram(bins = 15, fill = \"steelblue\", alpha = 0.7) +\n  labs(title = \"A) Income Distribution\", \n       x = \"Median Income ($)\", y = \"Counties\") +\n  scale_x_continuous(labels = dollar) +\n  theme_minimal()\n\n# Plot 2: Education vs Income\np2 <- ggplot(full_data) +\n  aes(x = pct_college, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(title = \"B) Education vs Income\",\n       x = \"% College Educated\", y = \"Median Income ($)\") +\n  scale_y_continuous(labels = dollar) +\n  theme_minimal()\n\n# Plot 3: Housing affordability by income category\np3 <- ggplot(full_data) +\n  aes(x = income_category, y = rent_to_income, fill = income_category) +\n  geom_boxplot() +\n  labs(title = \"C) Housing Affordability by Income\",\n       x = \"Income Category\", y = \"Rent as % of Income\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Plot 4: Data reliability by population\np4 <- ggplot(county_reliability) +\n  aes(x = total_popE, y = income_moe_pct) +\n  geom_point(alpha = 0.7) +\n  geom_hline(yintercept = 10, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"D) Data Reliability\",\n       x = \"Population\", y = \"MOE (%)\") +\n  scale_x_continuous(labels = comma) +\n  theme_minimal()\n\n# Combine all plots\ncombined_plot <- (p1 | p2) / (p3 | p4)\ncombined_plot + plot_annotation(\n  title = \"Pennsylvania County Analysis: Income, Education, and Housing Patterns\",\n  caption = \"Source: American Community Survey 2018-2022\"\n)\n```\n\n## Exercise 7: Ethical Data Communication - Implementing Research Recommendations\n\n**Background:** Research by Jurjevich et al. (2018) found that only 27%\nof planners warn users about unreliable ACS data, violating AICP ethical\nstandards. In this exercise, you'll practice the five research-based\nguidelines for ethical ACS data communication.\n\n### 7.1 Create Professional Data Tables with Uncertainty\n\n**Your Task:** Follow the Jurjevich et al. guidelines to create an\nethical data presentation.\n\n```{r}\n# Get comprehensive data for ethical analysis\nethical_demo_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    median_income = \"B19013_001\",   # Median household income\n    total_25plus = \"B15003_001\",    # Total population 25 years and over\n    bachelor_plus = \"B15003_022\",   # Bachelor's degree or higher\n    total_pop = \"B01003_001\"        # Total population\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  mutate(\n    # Calculate derived statistics\n    pct_college = (bachelor_plusE / total_25plusE) * 100,\n    \n    # Calculate MOE for percentage using error propagation\n    pct_college_moe = pct_college * sqrt((bachelor_plusM/bachelor_plusE)^2 + (total_25plusM/total_25plusE)^2),\n    \n    # Calculate coefficient of variation for all key variables\n    income_cv = (median_incomeM / median_incomeE) * 100,\n    education_cv = (pct_college_moe / pct_college) * 100,\n    \n    # Create reliability categories based on CV\n    income_reliability = case_when(\n      income_cv < 12 ~ \"High\",\n      income_cv <= 40 ~ \"Moderate\", \n      TRUE ~ \"Low\"\n    ),\n    \n    education_reliability = case_when(\n      education_cv < 12 ~ \"High\",\n      education_cv <= 40 ~ \"Moderate\",\n      TRUE ~ \"Low\"\n    ),\n    \n    # Create color coding for reliability\n    income_color = case_when(\n      income_reliability == \"High\" ~ \"🟢\",\n      income_reliability == \"Moderate\" ~ \"🟡\",\n      TRUE ~ \"🔴\"\n    ),\n    \n    education_color = case_when(\n      education_reliability == \"High\" ~ \"🟢\",\n      education_reliability == \"Moderate\" ~ \"🟡\", \n      TRUE ~ \"🔴\"\n    ),\n    \n    # Clean county names\n    county_name = str_remove(NAME, paste0(\", \", state_choice))\n  )\n\n# Create ethical data table focusing on least reliable estimates\nethical_data_table <- ethical_demo_data %>%\n  select(county_name, median_incomeE, median_incomeM, income_cv, income_color,\n         pct_college, pct_college_moe, education_cv, education_color) %>%\n  arrange(desc(income_cv)) %>%  # Show least reliable first\n  slice_head(n = 10)\n\n# Create professional table following guidelines\nlibrary(knitr)\nlibrary(kableExtra)\n\nethical_data_table %>%\n  select(county_name, median_incomeE, median_incomeM, income_cv, income_color) %>%\n  kable(\n    col.names = c(\"County\", \"Median Income\", \"Margin of Error\", \n                  \"CV (%)\", \"Reliability\"),\n    caption = \"Pennsylvania Counties: Median Household Income with Statistical Uncertainty\",\n    format.args = list(big.mark = \",\")\n  ) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\")) %>%\n  footnote(\n    general = c(\"Coefficient of Variation (CV) indicates reliability:\",\n                \"🟢 High reliability (CV < 12%)\",\n                \"🟡 Moderate reliability (CV 12-40%)\", \n                \"🔴 Low reliability (CV > 40%)\",\n                \"Following Jurjevich et al. (2018) research recommendations\",\n                \"Source: American Community Survey 2018-2022 5-Year Estimates\"),\n    general_title = \"Notes:\"\n  )\n```\n\n### 7.3 Now try Census Tracts\n\n```{r}\n# Get census tract poverty data for Philadelphia\nphilly_poverty <- get_acs(\n    geography = \"tract\",\n    variables = c(\n      poverty_pop = \"B17001_001\",     \n      poverty_below = \"B17001_002\"    \n    ),\n    state = \"PA\",\n    county = \"101\",\n    year = 2022,\n    output = \"wide\"\n  ) %>%\n  filter(poverty_popE > 0) %>%  # Remove tracts with no poverty data\n  mutate(\n    # Calculate poverty rate and its MOE\n    poverty_rate = (poverty_belowE / poverty_popE) * 100,\n    \n    # MOE for derived percentage using error propagation\n    poverty_rate_moe = poverty_rate * sqrt((poverty_belowM/poverty_belowE)^2 + (poverty_popM/poverty_popE)^2),\n    \n    # Coefficient of variation\n    poverty_cv = (poverty_rate_moe / poverty_rate) * 100,\n    \n    # Reliability assessment\n    reliability = case_when(\n      poverty_cv < 12 ~ \"High\",\n      poverty_cv <= 40 ~ \"Moderate\",\n      poverty_cv <= 75 ~ \"Low\",\n      TRUE ~ \"Very Low\"\n    ),\n    \n    # Color coding\n    reliability_color = case_when(\n      reliability == \"High\" ~ \"🟢\",\n      reliability == \"Moderate\" ~ \"🟡\",\n      reliability == \"Low\" ~ \"🟠\",\n      TRUE ~ \"🔴\"\n    ),\n    \n    # Population size categories\n    pop_category = case_when(\n      poverty_popE < 500 ~ \"Very Small (<500)\",\n      poverty_popE < 1000 ~ \"Small (500-1000)\",\n      poverty_popE < 1500 ~ \"Medium (1000-1500)\",\n      TRUE ~ \"Large (1500+)\"\n    )\n  )\n\n# Check the data quality crisis at tracts\nreliability_summary <- philly_poverty %>%\n  count(reliability) %>%\n  mutate(\n    percentage = round(n / sum(n) * 100, 1),\n    total_bg = sum(n)\n  )\n\nprint(\"Philadelphia Census Tract Poverty Data Reliability:\")\nreliability_summary %>%\n  kable(\n    col.names = c(\"Data Quality\", \"Number of Tracts\", \"Percentage\", \"Total\"),\n    caption = \"The Data Quality Crisis: Philadelphia Census Tract Poverty Estimates\"\n  ) %>%\n  kable_styling()\n```\n\n```{r}\n# Show the most problematic estimates (following Guideline 3: provide context)\nworst_estimates <- philly_poverty %>%\n  filter(reliability %in% c(\"Low\", \"Very Low\")) %>%\n  arrange(desc(poverty_cv)) %>%\n  slice_head(n = 10)\n\nworst_estimates %>%\n  select(GEOID, poverty_rate, poverty_rate_moe, poverty_cv, reliability_color, poverty_popE) %>%\n  kable(\n    col.names = c(\"Tract\", \"Poverty Rate (%)\", \"MOE\", \"CV (%)\", \"Quality\", \"Pop Size\"),\n    caption = \"Guideline 3: Tracts with Least Reliable Poverty Estimates\",\n    digits = c(0, 1, 1, 1, 0, 0)\n  ) %>%\n  kable_styling() %>%\n  footnote(\n    general = c(\"These estimates should NOT be used for policy decisions\",\n                \"CV > 75% indicates very low reliability\",\n                \"Recommend aggregation or alternative data sources\")\n  )\n```\n\n## Key References and Acknowledgments\n\nJurjevich, J. R., Griffin, A. L., Spielman, S. E., Folch, D. C.,\nMerrick, M., & Nagle, N. N. (2018). Navigating statistical uncertainty:\nHow urban and regional planners understand and work with American\ncommunity survey (ACS) data for guiding policy. *Journal of the American\nPlanning Association*, *84*(2), 112-126.\n\nWalker, K. (2023). *Analyzing US Census Data: Methods, Maps, and Models\nin R*. Available at: https://walker-data.com/census-r/\n\n**AI Acknowledgments:** This lab was developed with coding assistance\nfrom Claude AI. I have run, reviewed, and edited the final version. Any\nremaining errors are my own.\n","srcMarkdownNoYaml":"\n\n## Setup and Data Loading\n\n```{r}\n# Load required packages\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(scales)\nlibrary(RColorBrewer)\n# Set your Census API key if you haven't already\ncensus_api_key(\"ec702835845a134b4376c60759aa72ce62f6df59\")\n\n# We'll use Pennsylvania data for consistency with previous weeks\nstate_choice <- \"PA\"\n```\n\n------------------------------------------------------------------------\n\n## Exercise 0: Finding Census Variable Codes\n\n**The Challenge:** You know you want data on total population, median\nincome, and median age, but you don't know the specific Census variable\ncodes. How do you find them?\n\n### 0.1 Load the Variable Dictionary\n\n```{r}\n# Load all available variables for ACS 5-year 2022\nacs_vars_2022 <- load_variables(2022, \"acs5\", cache = TRUE)\n\n# Look at the structure\nglimpse(acs_vars_2022)\nhead(acs_vars_2022)\n```\n\n**What you see:**\n\n-   `name`: The variable code (e.g., \"B01003_001\")\n-   `label`: Human-readable description\n-   `concept`: The broader table this variable belongs to\n\n### 0.2 Search for Population Variables\n\n**Your Task:** Find the variable code for total population.\n\n```{r}\n# Search for population-related variables\npopulation_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"Total.*population\"))\n\n# Look at the results\nhead(population_vars, 10)\n\n# Or search in the concept field\npop_concept <- acs_vars_2022 %>%\n  filter(str_detect(concept, \"Total Population\"))\n\nhead(pop_concept)\n```\n\n**Tip:** Look for \"Total\" followed by \"population\" - usually\n`B01003_001`\n\n### 0.3 Search for Income Variables\n\n**Your Task:** Find median household income variables.\n\n```{r}\n# Search for median income\nincome_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*income\"))\n\n# Look specifically for household income\nhousehold_income <- income_vars %>%\n  filter(str_detect(label, \"household\"))\n\nprint(\"Household income variables:\")\nhead(household_income)\n\n# Alternative: search by concept\nincome_concept <- acs_vars_2022 %>%\n  filter(str_detect(concept, \"Median Household Income\"))\n\nhead(income_concept)\n```\n\n**Pattern Recognition:** Median household income is typically\n`B19013_001`\n\n### 0.4 Search for Age Variables\n\n**Your Task:** Find median age variables.\n\n\\[write the code below - first add a code chunk\\]\n\n### 0.5 Advanced Search Techniques\n\n**Your Task:** Learn more sophisticated search methods.\n\n```{r}\n# Search for multiple terms at once\nhousing_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*(rent|value)\"))\n\nprint(\"Housing cost variables:\")\nhead(housing_vars, 10)\n\n# Search excluding certain terms\nincome_not_family <- acs_vars_2022 %>%\n  filter(str_detect(label, \"[Mm]edian.*income\") & \n         !str_detect(label, \"family\"))\n\nprint(\"Income variables (not family income):\")\nhead(income_not_family)\n\n# Case-insensitive search using regex\neducation_vars <- acs_vars_2022 %>%\n  filter(str_detect(label, regex(\"bachelor\", ignore_case = TRUE)))\n\nprint(\"Education variables:\")\nhead(education_vars, 5)\n```\n\n### 0.6 Interactive Exploration\n\n**Your Task:** Use RStudio's viewer for easier searching.\n\n```{r}\n# Open the full variable list in RStudio viewer\n# This opens a searchable data table\nView(acs_vars_2022)\n\n# Pro tip: You can also search specific table groups\n# B01 = Age and Sex\n# B19 = Income  \n# B25 = Housing\ntable_b19 <- acs_vars_2022 %>%\n  filter(str_detect(name, \"^B19\"))  # ^ means \"starts with\"\n\nprint(\"All B19 (Income) table variables:\")\nhead(table_b19, 10)\n\n```\n\n### 0.7 Verify Your Variable Choices\n\n**Your Task:** Test your variables by getting a small sample of data.\n\n```{r}\n# Test the variables you found\ntest_vars <- c(\n  total_pop = \"B01003_001\",      # Total population\n  median_income = \"B19013_001\",  # Median household income\n  median_age = \"B01002_001\"      # Median age\n)\n\n# Get data for just one state to test\ntest_data <- get_acs(\n  geography = \"state\",\n  variables = test_vars,\n  state = \"PA\",\n  year = 2022\n)\n\n# Check that you got what you expected\ntest_data\n```\n\n### 0.8 Common Variable Patterns\n\n**Reference guide for future use:**\n\n```{r}\n# Common patterns to remember:\ncommon_variables <- tribble(\n  ~concept, ~typical_code, ~description,\n  \"Total Population\", \"B01003_001\", \"Total population\",\n  \"Median Age\", \"B01002_001\", \"Median age of population\", \n  \"Median HH Income\", \"B19013_001\", \"Median household income\",\n  \"White Population\", \"B03002_003\", \"White alone population\",\n  \"Black Population\", \"B03002_004\", \"Black/African American alone\",\n  \"Hispanic Population\", \"B03002_012\", \"Hispanic or Latino population\",\n  \"Bachelor's Degree\", \"B15003_022\", \"Bachelor's degree or higher\",\n  \"Median Rent\", \"B25058_001\", \"Median contract rent\",\n  \"Median Home Value\", \"B25077_001\", \"Median value owner-occupied\"\n)\n\nprint(\"Common Census Variables:\")\ncommon_variables\n```\n\n**Key Tips for Variable Hunting:**\n\n1.  **Start with concepts** - search for the topic you want (income,\n    age, housing)\n2.  **Look for \"Median\"** vs \"Mean\" - median is usually more\n    policy-relevant\n3.  **Check the universe** - some variables are for \"households,\" others\n    for \"population\"\n4.  **Test with small data** before running large queries\n5.  **Bookmark useful variables** for future projects (type them in your\n    weekly notes!)\n\n## Exercise 1: Single Variable EDA\n\n### 1.1 Load and Inspect Data\n\n```{r}\n# Get county-level data for your state\ncounty_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    total_pop = \"B01003_001\",       # Total population\n    median_income = \"B19013_001\",   # Median household income\n    median_age = \"B01002_001\"       # Median age\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n)\n\n# Clean county names\ncounty_data <- county_data %>%\n  mutate(county_name = str_remove(NAME, paste0(\", Pennsylvania\")))\n\n# Basic inspection\nglimpse(county_data)\n```\n```{r}\nview(county_data)\n```\n\n### 1.2 Explore Income Distribution\n\n**Your Task:** Create a histogram of median household income and\ndescribe what you see.\n\n```{r}\n# Create histogram of median income\nggplot(county_data) +\n  aes(x = median_incomeE) +\n  geom_histogram(bins = 15, fill = \"lightgreen\", alpha = 0.7) +\n  labs(\n    title = \"Distribution of Median Household Income\",\n    x = \"Median Household Income ($)\",\n    y = \"Number of Counties\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = dollar)\n```\n\n### 1.3 Box Plot for Outlier Detection\n\n**Your Task:** Create a boxplot to identify specific outlier counties.\n\n```{r}\n# Box plot to see outliers clearly\nggplot(county_data) +\n  aes(y = median_incomeE) +\n  geom_boxplot(fill = \"lightblue\", width = 0.5) +\n  labs(\n    title = \"Median Income Distribution with Outliers\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n\n# Identify the outlier counties\nincome_outliers <- county_data %>%\n  mutate(\n    Q1 = quantile(median_incomeE, 0.25, na.rm = TRUE),\n    Q3 = quantile(median_incomeE, 0.75, na.rm = TRUE),\n    IQR = Q3 - Q1,\n    outlier = median_incomeE < (Q1 - 1.5 * IQR) | median_incomeE > (Q3 + 1.5 * IQR)\n  ) %>%\n  filter(outlier) %>%\n  select(county_name, median_incomeE)\n\nprint(\"Outlier counties:\")\nincome_outliers\n```\n\n### 1.4 Challenge Exercise: Population Distribution\n\n**Your Task:** Create your own visualization of population distribution\nand identify outliers.\n\n**Requirements:**\n\n-   Create a histogram of total population (`total_popE`)\n-   Use a different color than the income example (try \"darkgreen\" or\n    \"purple\")\n-   Add appropriate labels and title\n-   Create a boxplot to identify population outliers\n-   Find and list the 3 most populous and 3 least populous counties\n```{r}\n# Box plot to see outliers clearly\nggplot(county_data) +\n  aes(y = total_popE) +\n  geom_boxplot(fill = \"lightblue\", width = 0.5) +\n  labs(\n    title = \"Total Population Distribution with Outliers\",\n    y = \"Total Population\"\n  ) +\n  theme_minimal()\n\n# Identify the outlier counties\npopulation_outliers <- county_data %>%\n  mutate(\n    Q1 = quantile(total_popE, 0.25, na.rm = TRUE),\n    Q3 = quantile(total_popE, 0.75, na.rm = TRUE),\n    IQR = Q3 - Q1,\n    outlier = total_popE < (Q1 - 1.5 * IQR) | total_popE > (Q3 + 1.5 * IQR)\n  ) %>%\n  filter(outlier) %>%\n  select(county_name, total_popE)\n\nprint(\"Outlier counties:\")\npopulation_outliers\n```\n\n------------------------------------------------------------------------\n\n## Exercise 2: Two Variable Relationships\n\n### 2.1 Population vs Income Scatter Plot\n\n**Your Task:** Explore the relationship between population size and\nmedian income.\n\n```{r}\n# Basic scatter plot\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point() +\n  labs(\n    title = \"Population vs Median Income\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n### 2.2 Add Trend Line and Labels\n\n**Your Task:** Improve the plot by adding a trend line and labeling\ninteresting points.\n\n```{r}\n# Enhanced scatter plot with trend line\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"red\") +\n  labs(\n    title = \"Population vs Median Income in Pennsylvania Counties\",\n    subtitle = \"2018-2022 ACS 5-Year Estimates\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\",\n    caption = \"Source: U.S. Census Bureau\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n\n# Calculate correlation\ncorrelation <- cor(county_data$total_popE, county_data$median_incomeE, use = \"complete.obs\")\nprint(paste(\"Correlation coefficient:\", round(correlation, 3)))\n```\n\n### 2.3 Deal with Skewed Data\n\n**Your Task:** The population data is highly skewed. Try a log\ntransformation.\n\n```{r}\n# Log-transformed scatter plot\nggplot(county_data) +\n  aes(x = log(total_popE), y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(\n    title = \"Log(Population) vs Median Income\",\n    x = \"Log(Total Population)\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n```\n\n**Question:** Does the log transformation reveal a clearer relationship?\nYes.\n\n### 2.4 Challenge Exercise: Age vs Income Relationship\n\n**Your Task:** Explore the relationship between median age and median\nincome using different visualization techniques.\n```{r}\n# Enhanced scatter plot with trend line\nggplot(county_data) +\n  aes(x = median_ageE, y = median_incomeE) +\n  geom_point(color = \"red\", alpha = 0.5) +\n  geom_smooth(method = \"loess\", se = TRUE) +\n  labs(\n    title = \"Population vs Median Income in Pennsylvania Counties\",\n    subtitle = \"2018-2022 ACS 5-Year Estimates\",\n    x = \"Median Age\",\n    y = \"Median Household Income ($)\",\n    caption = \"Source: U.S. Census Bureau\"\n  ) +\n  theme_dark() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n**Requirements:**\n\n-   Create a scatter plot with median age on x-axis and median income on\n    y-axis\n-   Use red points (`color = \"red\"`) with 50% transparency\n    (`alpha = 0.5`)\n-   Add a smooth trend line using `method = \"loess\"` instead of \"lm\"\n-   Use the \"dark\" theme (`theme_dark()`)\n-   Format the y-axis with dollar signs\n-   Add a title that mentions both variables\n\n------------------------------------------------------------------------\n\n## Exercise 3: Data Quality Visualization \n\n### 3.1 Visualize Margins of Error\n\n**Your Task:** Create a visualization showing how data reliability\nvaries across counties.\n\n```{r}\n# Calculate MOE percentages\ncounty_reliability <- county_data %>%\n  mutate(\n    income_moe_pct = (median_incomeM / median_incomeE) * 100,\n    pop_category = case_when(\n      total_popE < 50000 ~ \"Small (<50K)\",\n      total_popE < 200000 ~ \"Medium (50K-200K)\",\n      TRUE ~ \"Large (200K+)\"\n    )\n  )\n\n# MOE by population size\nggplot(county_reliability) +\n  aes(x = total_popE, y = income_moe_pct) +\n  geom_point(alpha = 0.7) +\n  geom_hline(yintercept = 10, color = \"red\", linetype = \"dashed\") +\n  labs(\n    title = \"Data Reliability Decreases with Population Size\",\n    x = \"Total Population\",\n    y = \"Margin of Error (%)\",\n    caption = \"Red line = 10% reliability threshold\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma)\n```\n\n### 3.2 Compare Reliability by County Size\n\n**Your Task:** Use box plots to compare MOE across county size\ncategories.\n\n```{r}\n# Box plots by population category\nggplot(county_reliability) +\n  aes(x = pop_category, y = income_moe_pct, fill = pop_category) +\n  geom_boxplot() +\n  labs(\n    title = \"Data Reliability by County Size Category\",\n    x = \"Population Category\",\n    y = \"Margin of Error (%)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")  # Remove legend since x-axis is clear\n```\n\n### 3.3 Challenge Exercise: Age Data Reliability\n\n**Your Task:** Analyze the reliability of median age data across\ncounties.\n```{r}\n# Calculate MOE percentages\nage_county_reliability <- county_data %>%\n  mutate(\n    age_moe_pct = (median_ageM / median_ageE) * 100,\n    age_category = case_when(\n      median_ageE < 40 ~ \"Small (<40)\",\n      median_ageE < 50 ~ \"Medium (40-50)\",\n      TRUE ~ \"Large (50+)\"\n    )\n  )\n\nggplot(age_county_reliability) +\n  aes(x = median_ageE, y = age_moe_pct) +\n  geom_point(color = \"purple\", size = 2, alpha = 0.7) +\n  geom_hline(yintercept = 5, color = \"blue\", linetype = \"dashed\") +\n  labs(\n    title = \"Data Reliability Decreases with Median Age\",\n    x = \"Median Age\",\n    y = \"Margin of Error (%)\",\n    caption = \"Red line = 5% reliability threshold\"\n  ) +\n  theme_classic() +\n  scale_x_continuous(labels = comma)\n```\n```{r}\n# Box plots by population category\nggplot(age_county_reliability) +\n  aes(x = age_category, y = age_moe_pct, fill = age_category) +\n  geom_boxplot() +\n  labs(\n    title = \"Data Reliability by County Size Category\",\n    x = \"Age Category\",\n    y = \"Margin of Error (%)\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")  # Remove legend since x-axis is clear\n```\n\n**Requirements:** \n\n- Calculate MOE percentage for median age\n(`median_ageM / median_ageE * 100`) \n- Create a scatter plot showing\npopulation vs age MOE percentage \n- Use purple points\n(`color = \"purple\"`) with size = 2 \n- Add a horizontal line at 5% MOE\nusing `geom_hline()` with a blue dashed line \n- Use `theme_classic()`instead of `theme_minimal()` \n- Create a boxplot comparing age MOE across the three population categories\n\n------------------------------------------------------------------------\n\n## Exercise 4: Multiple Variables with Color and Faceting \n\n### 4.1 Three-Variable Scatter Plot\n\n**Your Task:** Add median age as a color dimension to the\npopulation-income relationship.\n\n```{r}\n# Three-variable scatter plot\nggplot(county_data) +\n  aes(x = total_popE, y = median_incomeE, color = median_ageE) +\n  geom_point(size = 2, alpha = 0.7) +\n  scale_color_viridis_c(name = \"Median\\nAge\") +\n  labs(\n    title = \"Population, Income, and Age Patterns\",\n    x = \"Total Population\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n### 4.2 Create Categories for Faceting\n\n**Your Task:** Create age categories and use faceting to compare\npatterns.\n\n```{r}\n# Create age categories and faceted plot\ncounty_faceted <- county_data %>%\n  mutate(\n    age_category = case_when(\n      median_ageE < 40 ~ \"Young (< 40)\",\n      median_ageE < 45 ~ \"Middle-aged (40-45)\",\n      TRUE ~ \"Older (45+)\"\n    )\n  )\n\nggplot(county_faceted) +\n  aes(x = total_popE, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  facet_wrap(~age_category) +\n  labs(\n    title = \"Population-Income Relationship by Age Profile\",\n    x = \"Total Population\",\n    y = \"Median Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = dollar)\n```\n\n**Question:** Do the relationships between population and income differ\nby age profile?\nYes.\n\n**Your Task:** Create a visualization using income categories and multiple aesthetic mappings.\n```{r}\n# Create age categories and faceted plot\nincome_county_faceted <- county_data %>%\n  mutate(\n    income_category = case_when(\n      median_incomeE < 50000 ~ \"Low (< 50k)\",\n      median_incomeE < 80000 ~ \"Middle (50-80k)\",\n      TRUE ~ \"High (80k+)\"\n    )\n  )\n\nlibrary(RColorBrewer)\nggplot(income_county_faceted) +\n  aes(\n    x = total_popE, \n    y = median_ageE,\n    color = income_category,\n    size = median_incomeM\n  ) +\n  geom_point(alpha = 0.7) +\n  scale_color_brewer(palette = \"Set2\") + \n  labs(\n    title = \"Population vs. Median Age by Income Category\",\n    x = \"Total Population\",\n    y = \"Median Age\",\n    color = \"Income Category\",\n    size = \"Income MOE\"\n  ) +\n  facet_wrap(~income_category) +\n  theme_bw() +\n  scale_x_continuous(labels = comma) +\n  scale_y_continuous(labels = number) \n```\n\n**Requirements:** \n\n- Create income categories: \"Low\" (\\<\\$50k), \"Middle\"\n(\\$50k-\\$80k), \"High\" (\\>\\$80k) \n- Make a scatter plot with population (x) vs median age (y) - Color points by income category \n- Size points by the margin of error for income (`median_incomeM`) \n- Use the \"Set2\" color palette: `scale_color_brewer(palette = \"Set2\")` **note: you'll need to load the `RColorBrewer` package for this`\n- Facet by income category using `facet_wrap()` \n- Use `theme_bw()` theme\n\n------------------------------------------------------------------------\n\n## Exercise 5: Data Joins and Integration \n\n### 5.1 Get Additional Census Data\n\n**Your Task:** Load educational attainment data and join it with our\nexisting data.\n\n```{r}\n# Get educational attainment data\neducation_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    total_25plus = \"B15003_001\",    # Total population 25 years and over\n    bachelor_plus = \"B15003_022\"    # Bachelor's degree or higher\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  mutate(\n    pct_college = (bachelor_plusE / total_25plusE) * 100,\n    county_name = str_remove(NAME, paste0(\", \", state_choice))\n  ) %>%\n  select(GEOID, county_name, pct_college)\n\n# Check the data\nhead(education_data)\n```\n\n### 5.2 Join the Datasets\n\n**Your Task:** Join the education data with our main county dataset.\n\n```{r}\n# Perform the join\ncombined_data <- county_data %>%\n  left_join(education_data, by = \"GEOID\")\n\n# Check the join worked\ncat(\"Original data rows:\", nrow(county_data), \"\\n\")\ncat(\"Combined data rows:\", nrow(combined_data), \"\\n\")\ncat(\"Missing education data:\", sum(is.na(combined_data$pct_college)), \"\\n\")\n\n# View the combined data\nhead(combined_data)\n```\n\n### 5.3 Analyze the New Relationship\n\n**Your Task:** Explore the relationship between education and income.\n\n```{r}\n# Education vs Income scatter plot\nggplot(combined_data) +\n  aes(x = pct_college, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = TRUE) +\n  labs(\n    title = \"Education vs Income Across Counties\",\n    x = \"Percent with Bachelor's Degree or Higher\",\n    y = \"Median Household Income ($)\"\n  ) +\n  theme_minimal() +\n  scale_y_continuous(labels = dollar)\n\n# Calculate correlation\nedu_income_cor <- cor(combined_data$pct_college, combined_data$median_incomeE, use = \"complete.obs\")\nprint(paste(\"Education-Income Correlation:\", round(edu_income_cor, 3)))\n```\n\n### 5.4 Get Housing Data and Triple Join\n\n**Your Task:** Add housing cost data to create a three-way analysis.\n\n```{r}\n# Get housing cost data\nhousing_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    median_rent = \"B25058_001\",     # Median contract rent\n    median_home_value = \"B25077_001\" # Median value of owner-occupied units\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  select(GEOID, median_rent = median_rentE, median_home_value = median_home_valueE)\n\n# Join all three datasets\nfull_data <- combined_data %>%\n  left_join(housing_data, by = \"GEOID\")\n\n# Create a housing affordability measure\nfull_data <- full_data %>%\n  mutate(\n    rent_to_income = (median_rent * 12) / median_incomeE * 100,\n    income_category = case_when(\n      median_incomeE < 50000 ~ \"Low Income\",\n      median_incomeE < 80000 ~ \"Middle Income\",\n      TRUE ~ \"High Income\"\n    )\n  )\n\nhead(full_data)\n```\n\n### 5.5 Advanced Multi-Variable Analysis\n\n**Your Task:** Create a comprehensive visualization showing multiple\nrelationships.\n\n```{r}\n# Complex multi-variable plot\nggplot(full_data) +\n  aes(x = pct_college, y = rent_to_income, \n      color = income_category, size = total_popE) +\n  geom_point(alpha = 0.7) +\n  labs(\n    title = \"Education, Housing Affordability, and Income Patterns\",\n    subtitle = \"Larger points = larger population\",\n    x = \"Percent with Bachelor's Degree or Higher\",\n    y = \"Annual Rent as % of Median Income\",\n    color = \"Income Category\",\n    size = \"Population\"\n  ) +\n  theme_minimal() +\n  guides(size = guide_legend(override.aes = list(alpha = 1)))\n```\n\n## Exercise 6: Publication-Ready Visualization\n\n### 6.1 Create a Policy-Focused Visualization\n\n**Your Task:** Combine multiple visualizations to tell a more complete story about county characteristics.\n\n```{r}\n# Create a multi-panel figure\nlibrary(patchwork)  # For combining plots\n\n# Plot 1: Income distribution\np1 <- ggplot(full_data) +\n  aes(x = median_incomeE) +\n  geom_histogram(bins = 15, fill = \"steelblue\", alpha = 0.7) +\n  labs(title = \"A) Income Distribution\", \n       x = \"Median Income ($)\", y = \"Counties\") +\n  scale_x_continuous(labels = dollar) +\n  theme_minimal()\n\n# Plot 2: Education vs Income\np2 <- ggplot(full_data) +\n  aes(x = pct_college, y = median_incomeE) +\n  geom_point(alpha = 0.7) +\n  geom_smooth(method = \"lm\", se = FALSE) +\n  labs(title = \"B) Education vs Income\",\n       x = \"% College Educated\", y = \"Median Income ($)\") +\n  scale_y_continuous(labels = dollar) +\n  theme_minimal()\n\n# Plot 3: Housing affordability by income category\np3 <- ggplot(full_data) +\n  aes(x = income_category, y = rent_to_income, fill = income_category) +\n  geom_boxplot() +\n  labs(title = \"C) Housing Affordability by Income\",\n       x = \"Income Category\", y = \"Rent as % of Income\") +\n  theme_minimal() +\n  theme(legend.position = \"none\")\n\n# Plot 4: Data reliability by population\np4 <- ggplot(county_reliability) +\n  aes(x = total_popE, y = income_moe_pct) +\n  geom_point(alpha = 0.7) +\n  geom_hline(yintercept = 10, color = \"red\", linetype = \"dashed\") +\n  labs(title = \"D) Data Reliability\",\n       x = \"Population\", y = \"MOE (%)\") +\n  scale_x_continuous(labels = comma) +\n  theme_minimal()\n\n# Combine all plots\ncombined_plot <- (p1 | p2) / (p3 | p4)\ncombined_plot + plot_annotation(\n  title = \"Pennsylvania County Analysis: Income, Education, and Housing Patterns\",\n  caption = \"Source: American Community Survey 2018-2022\"\n)\n```\n\n## Exercise 7: Ethical Data Communication - Implementing Research Recommendations\n\n**Background:** Research by Jurjevich et al. (2018) found that only 27%\nof planners warn users about unreliable ACS data, violating AICP ethical\nstandards. In this exercise, you'll practice the five research-based\nguidelines for ethical ACS data communication.\n\n### 7.1 Create Professional Data Tables with Uncertainty\n\n**Your Task:** Follow the Jurjevich et al. guidelines to create an\nethical data presentation.\n\n```{r}\n# Get comprehensive data for ethical analysis\nethical_demo_data <- get_acs(\n  geography = \"county\",\n  variables = c(\n    median_income = \"B19013_001\",   # Median household income\n    total_25plus = \"B15003_001\",    # Total population 25 years and over\n    bachelor_plus = \"B15003_022\",   # Bachelor's degree or higher\n    total_pop = \"B01003_001\"        # Total population\n  ),\n  state = state_choice,\n  year = 2022,\n  output = \"wide\"\n) %>%\n  mutate(\n    # Calculate derived statistics\n    pct_college = (bachelor_plusE / total_25plusE) * 100,\n    \n    # Calculate MOE for percentage using error propagation\n    pct_college_moe = pct_college * sqrt((bachelor_plusM/bachelor_plusE)^2 + (total_25plusM/total_25plusE)^2),\n    \n    # Calculate coefficient of variation for all key variables\n    income_cv = (median_incomeM / median_incomeE) * 100,\n    education_cv = (pct_college_moe / pct_college) * 100,\n    \n    # Create reliability categories based on CV\n    income_reliability = case_when(\n      income_cv < 12 ~ \"High\",\n      income_cv <= 40 ~ \"Moderate\", \n      TRUE ~ \"Low\"\n    ),\n    \n    education_reliability = case_when(\n      education_cv < 12 ~ \"High\",\n      education_cv <= 40 ~ \"Moderate\",\n      TRUE ~ \"Low\"\n    ),\n    \n    # Create color coding for reliability\n    income_color = case_when(\n      income_reliability == \"High\" ~ \"🟢\",\n      income_reliability == \"Moderate\" ~ \"🟡\",\n      TRUE ~ \"🔴\"\n    ),\n    \n    education_color = case_when(\n      education_reliability == \"High\" ~ \"🟢\",\n      education_reliability == \"Moderate\" ~ \"🟡\", \n      TRUE ~ \"🔴\"\n    ),\n    \n    # Clean county names\n    county_name = str_remove(NAME, paste0(\", \", state_choice))\n  )\n\n# Create ethical data table focusing on least reliable estimates\nethical_data_table <- ethical_demo_data %>%\n  select(county_name, median_incomeE, median_incomeM, income_cv, income_color,\n         pct_college, pct_college_moe, education_cv, education_color) %>%\n  arrange(desc(income_cv)) %>%  # Show least reliable first\n  slice_head(n = 10)\n\n# Create professional table following guidelines\nlibrary(knitr)\nlibrary(kableExtra)\n\nethical_data_table %>%\n  select(county_name, median_incomeE, median_incomeM, income_cv, income_color) %>%\n  kable(\n    col.names = c(\"County\", \"Median Income\", \"Margin of Error\", \n                  \"CV (%)\", \"Reliability\"),\n    caption = \"Pennsylvania Counties: Median Household Income with Statistical Uncertainty\",\n    format.args = list(big.mark = \",\")\n  ) %>%\n  kable_styling(bootstrap_options = c(\"striped\", \"hover\")) %>%\n  footnote(\n    general = c(\"Coefficient of Variation (CV) indicates reliability:\",\n                \"🟢 High reliability (CV < 12%)\",\n                \"🟡 Moderate reliability (CV 12-40%)\", \n                \"🔴 Low reliability (CV > 40%)\",\n                \"Following Jurjevich et al. (2018) research recommendations\",\n                \"Source: American Community Survey 2018-2022 5-Year Estimates\"),\n    general_title = \"Notes:\"\n  )\n```\n\n### 7.3 Now try Census Tracts\n\n```{r}\n# Get census tract poverty data for Philadelphia\nphilly_poverty <- get_acs(\n    geography = \"tract\",\n    variables = c(\n      poverty_pop = \"B17001_001\",     \n      poverty_below = \"B17001_002\"    \n    ),\n    state = \"PA\",\n    county = \"101\",\n    year = 2022,\n    output = \"wide\"\n  ) %>%\n  filter(poverty_popE > 0) %>%  # Remove tracts with no poverty data\n  mutate(\n    # Calculate poverty rate and its MOE\n    poverty_rate = (poverty_belowE / poverty_popE) * 100,\n    \n    # MOE for derived percentage using error propagation\n    poverty_rate_moe = poverty_rate * sqrt((poverty_belowM/poverty_belowE)^2 + (poverty_popM/poverty_popE)^2),\n    \n    # Coefficient of variation\n    poverty_cv = (poverty_rate_moe / poverty_rate) * 100,\n    \n    # Reliability assessment\n    reliability = case_when(\n      poverty_cv < 12 ~ \"High\",\n      poverty_cv <= 40 ~ \"Moderate\",\n      poverty_cv <= 75 ~ \"Low\",\n      TRUE ~ \"Very Low\"\n    ),\n    \n    # Color coding\n    reliability_color = case_when(\n      reliability == \"High\" ~ \"🟢\",\n      reliability == \"Moderate\" ~ \"🟡\",\n      reliability == \"Low\" ~ \"🟠\",\n      TRUE ~ \"🔴\"\n    ),\n    \n    # Population size categories\n    pop_category = case_when(\n      poverty_popE < 500 ~ \"Very Small (<500)\",\n      poverty_popE < 1000 ~ \"Small (500-1000)\",\n      poverty_popE < 1500 ~ \"Medium (1000-1500)\",\n      TRUE ~ \"Large (1500+)\"\n    )\n  )\n\n# Check the data quality crisis at tracts\nreliability_summary <- philly_poverty %>%\n  count(reliability) %>%\n  mutate(\n    percentage = round(n / sum(n) * 100, 1),\n    total_bg = sum(n)\n  )\n\nprint(\"Philadelphia Census Tract Poverty Data Reliability:\")\nreliability_summary %>%\n  kable(\n    col.names = c(\"Data Quality\", \"Number of Tracts\", \"Percentage\", \"Total\"),\n    caption = \"The Data Quality Crisis: Philadelphia Census Tract Poverty Estimates\"\n  ) %>%\n  kable_styling()\n```\n\n```{r}\n# Show the most problematic estimates (following Guideline 3: provide context)\nworst_estimates <- philly_poverty %>%\n  filter(reliability %in% c(\"Low\", \"Very Low\")) %>%\n  arrange(desc(poverty_cv)) %>%\n  slice_head(n = 10)\n\nworst_estimates %>%\n  select(GEOID, poverty_rate, poverty_rate_moe, poverty_cv, reliability_color, poverty_popE) %>%\n  kable(\n    col.names = c(\"Tract\", \"Poverty Rate (%)\", \"MOE\", \"CV (%)\", \"Quality\", \"Pop Size\"),\n    caption = \"Guideline 3: Tracts with Least Reliable Poverty Estimates\",\n    digits = c(0, 1, 1, 1, 0, 0)\n  ) %>%\n  kable_styling() %>%\n  footnote(\n    general = c(\"These estimates should NOT be used for policy decisions\",\n                \"CV > 75% indicates very low reliability\",\n                \"Recommend aggregation or alternative data sources\")\n  )\n```\n\n## Key References and Acknowledgments\n\nJurjevich, J. R., Griffin, A. L., Spielman, S. E., Folch, D. C.,\nMerrick, M., & Nagle, N. N. (2018). Navigating statistical uncertainty:\nHow urban and regional planners understand and work with American\ncommunity survey (ACS) data for guiding policy. *Journal of the American\nPlanning Association*, *84*(2), 112-126.\n\nWalker, K. (2023). *Analyzing US Census Data: Methods, Maps, and Models\nin R*. Available at: https://walker-data.com/census-r/\n\n**AI Acknowledgments:** This lab was developed with coding assistance\nfrom Claude AI. I have run, reviewed, and edited the final version. Any\nremaining errors are my own.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"policy_lab1.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.24","theme":"cosmo","title":"Week 3 In-Class Lab: Data Visualization and EDA","author":"Elizabeth Delmelle","date":"today","editor":{"markdown":{"wrap":72}},"toc-location":"left"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}